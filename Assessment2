/* ISE102 Assessment 2 Case Study
Ashleigh Byrne A00145987
Victoria Watts
Jaspa Mahoney
*/

using System;
using System.Reflection.Metadata;
using System.Text.RegularExpressions;

namespace ISE102Assessment2;



// Task 1: Login Module (Victoria)
public class logsignmenu // Creating class for Menu
{
    private static string username = "yipppie"; // Setting static user
    private static string password = "password1234"; // Setting static password

    public static void Main(string[] args)
    {
        while (true)
        {
            Console.WriteLine("Select 1-3: "); // Creating menu
            Console.WriteLine("1 Login");
            Console.WriteLine("2 Signup");
            Console.WriteLine("3 Exit");

            string choice = Console.ReadLine();
            // Creating cases for Login and signup menu
            switch (choice)
            {
                case "1":
                    Login();
                    break;
                case "2":
                    Signup.SignupDetails();
                    break;
                case "3":
                    Console.WriteLine("Shutting down");
                    return;
                default:
                    Console.WriteLine("Choose a option on the menu between 1 to 3.");
                    break;
            }
        }
    }

    public static void Login()
    {
        Console.WriteLine("Username: "); // Asking and for username
        string inputu = Console.ReadLine();

        Console.WriteLine("Password: "); // Asking and for password
        string inputp = Console.ReadLine();

        if (inputu == username && inputp == password) // Verifying password and username
        {
            Console.WriteLine("Login verified, Welcome."); // Response for correct Login
        }
        else
        {
            Console.WriteLine("Password or username is incorrect."); // Response for incorrect password or username
        }
    }
}

// Task 2: Signup Module (Ashleigh)
public class Signup // Create a class to collect the signup information from the user
{
    // Define each of the variables for the signup information as private variables, as they are all used within the SignupModule class
    // All are private variables so they can only be accessed in the Signup class:
    private string username; // Username created in the SignupModule class. 
    private string email; // Email address of the user.
    private int age; // Age of the user. Created as an int so it can be validated to be between 18 and 100.
    private int phone; // Phone number of the user. Must be entered as digits.
    private string newPassword; // Password the user enters in at the end of their signup. The user will need to enter it in correctly to proceed.
    private string password; // Password the user entered when creating a login.

    public string phoneAreaCode; // Phone area code of the user. Is a public variable so it can be accessed outside of the Signup class

    public Signup(string existingUsername, string existingPassword) // Constructor to create a new instance of the Signup class with the username and password created in the Login Module
    {
        username = existingUsername; // Assign the username created in the SignupModule class to the username variable in the Signup class
        password = existingPassword; // Assign the password entered in the Login Module to the loginPassword variable in the Signup class
    }

    public static void SignupDetails() // Method to collect the user's information for the Signup Module.
    {
        Signup user = new Signup("defaultUsername", "defaultPassword"); // Create an instance of Signup to access non-static fields

        Console.WriteLine("Email: "); // Prompt the user to enter their email address
        user.email = Console.ReadLine().ToLower(); // Assign the user's input to the email variable, and force it to lower case so it is in the correct format.
        while (!Regex.IsMatch(user.email, @"\.(com)$")) // Data validation to check if the email address is valid. The email must contain a "." and end with ".com". Source for Regex method: (IAmTimCorey, 2022) 
        {
            Console.Write("Invalid email! Please enter a valid email (e.g. example@example.com): "); // Prompt the user to enter a valid email address if it does not match the regex pattern
            user.email = Console.ReadLine().ToLower(); // Assign the user's input to the email variable after being prompted to enter it in correctly.
        }

        Console.WriteLine("Age: "); // Prompt the user to enter their age
        while (!int.TryParse(Console.ReadLine(), out user.age) || user.age < 18 || user.age > 100) // Data validation to check if the age is valid. The age must be between 18 and 100.
        {
            Console.WriteLine("Invalid age! Age must be between 18 and 100. Please enter again: "); // Prompt the user to enter a valid age if it does not match the regex pattern.
        }

        Console.WriteLine("Phone: "); // Prompt the user to enter their phone number

// Data validation to check if the phone number is valid. Source for TryParse method: (C# TryParse - tutorialsEU - C#, 2023)
//TryParse converts the user's input string into an integer, and this number is stored in the variable user.phone.
//As integers cannot start with 0 this is disregarded from the start of the number, and the resulting number must be between 400000000 and 499999999 to be a valid phone number.
        while (!int.TryParse(Console.ReadLine(), out user.phone) || user.phone > 499999999 || user.phone < 400000000) 
        {
            Console.WriteLine("Invalid phone number! Please enter a phone number starting with '04':"); // Prompt the user to enter a valid phone number if it does not match the regex pattern.
        }
        user.phoneAreaCode = "+61" + user.phone; //   Create a phone area code for the user by adding "+61" to the front of the phone number entered by the user.

        Console.WriteLine("Password: "); // Prompt the user to enter their password
        user.password = Console.ReadLine(); // Assign the user's input to the password variable
        while (user.password != user.newPassword) // Data validation to check if the password is valid. The password must match the password entered in the Login Module.
        {
            Console.WriteLine("Incorrect password! Please try again: "); // Prompt the user to enter their password again if it does not match the password entered in the Login Module.
            user.password = Console.ReadLine(); // Assign the user's input to the password variable after being prompted to enter it in correctly.
        }
    }

    public void SignupConfirmation() // Method to confirm the user's information for the Signup Module.
    {
        // Program writes out the user's input information to confirm it is all correct
        Console.WriteLine("\nPlease confirm your details below:\n");
        Console.WriteLine($"Username: {username}"); // Display the username created in the SignupModule class
        Console.WriteLine($"Email: {email}"); // Display the email address entered by the user
        Console.WriteLine($"Age: {age}"); // Display the age entered by the user
        Console.WriteLine($"Phone: {phoneAreaCode}"); // Display the phone number entered by the user, starting with the area code


        Console.Write("\nIs the information correct? (yes/no): "); // Prompt the user to confirm if the information is correct
        string confirmation = Console.ReadLine().ToLower(); // Assign the user's input to the confirmation variable, and force it to lower case so it is in the correct format.

        if (confirmation != "yes") // If the user enters anything other than "yes", the program will enter this "if" statement.
        {
            Console.WriteLine("Restarting signup process...\n"); // Inform the user that the signup process is restarting
            SignupDetails(); // Call the SignupDetails method to collect user information again
            SignupConfirmation(); // Call the SignupConfirmation method to confirm the information entered by the user again
        }
        else
        {
            Console.WriteLine($"Signup successful! Welcome!"); // If the user enters in "yes", the program will enter this "else" statement and inform the user that their signup was successful.
        }
    }
}


*/ References:

IAmTimCorey. (2022). Intro to Regular Expressions - How to use Regex in C#. https://www.youtube.com/watch?v=R5BcHIMZMxc 
tutorialsEU - C#. 2023. C# TryParse - Converting strings in other data types. https://youtu.be/WV_xXlWl8bQ?si=JonkHpwEc115iSS1

*/
