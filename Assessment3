/* ISE102 Assessment 3
Ashleigh Byrne A00145987
Victoria Watts A00150225
*/

using System;
using System.Text.RegularExpressions;

namespace BankOfNswApp.BankApplication
{


// Task 1: Login Module (Victoria)
    public class Bank {
        private static void MainMenu() {
            while (true)
            {
                Console.WriteLine("Select 1-3: "); // Creating menu
                Console.WriteLine("1 Login");
                Console.WriteLine("2 Signup");
                Console.WriteLine("3 Exit");

                string choice = Console.ReadLine();
                // Creating cases for Login and signup menu
                switch (choice)
                {
                    case "1":
                        Login("Joe.Doe", "password123");
                        break;
                    case "2":
                        Signup();
                        break;
                    case "3":
                        Console.WriteLine("Shutting down");
                        return;
                    default:
                        Console.WriteLine("Choose a option on the menu between 1 to 3.");
                        break;
                }
        }
    }
    }
    class Signup {
    public void Signup()
    {
    // Define each of the variables for the signup information as private variables, as they are used within the SignupModule class
    public string username;
    public string password;
    private string email;
    private int age;
    private string phone;

    Signup user = new Signup();

    Console.WriteLine("Please enter your details below:"\n)

    Console.WriteLine("Username: ");
    string user.username = Console.ReadLine();
    
    Console.WriteLine("Password: ");
    string user.password = Console.ReadLine();
   
    Console.Write("Email: ");
    string user.email = Console.ReadLine();
    while (!Regex.IsMatch(email, @"$(.com)"))
        {
            Console.WriteLine("Invalid email! Please enter a valid email (e.g., example@example.com): ");
        }

    Console.WriteLine("Age: ");
        while (!int.TryParse(Console.ReadLine(), out user.age) || user.age < 18 || user.age > 100)
        {
            Console.WriteLine("Invalid age! Age must be between 18 and 100. Please enter again: ");
        }

        
    Console.WriteLine("Phone: +61"); // Prompt the user to enter their phone number
    //string user.phone = Console.ReadLine();

        // Data validation to check if the phone number is valid. Source for TryParse method: (C# TryParse - tutorialsEU - C#, 2023)
        //TryParse converts the user's input string into an integer, and this number is stored in the variable user.phone.
        //As integers cannot start with 0 this is disregarded from the start of the number, and the resulting number must be between 400000000 and 499999999 to be a valid phone number.
        while (!int.TryParse(Console.ReadLine(), out user.phone) || phone > 499999999 || phone < 400000000)
        {
            Console.WriteLine("Invalid phone number! Please enter a phone number starting with '04':"); // Prompt the user to enter a valid phone number if it does not match the regex pattern.
        }
        int phoneAreaCode = "+61" + user.phone; //   Create a phone area code for the user by adding "+61" to the front of the phone number entered by the user.

        
    }
    public void SignupConfirmation()
    {
        // Program writes out the user's input information to confirm it is all correct
        Console.WriteLine("\nPlease confirm your details below:\n");
        Console.WriteLine($"Username: {username}");
        Console.WriteLine($"Email: {email}");
        Console.WriteLine($"Age: {age}");
        Console.WriteLine($"Phone: {phone}");

        Console.Write("\nIs the information correct? (yes/no): ");
        // Create a confirmation variable and allow the user to input a response. Force the user's response to lower case so it matches "yes"
        string confirmation = Console.ReadLine().ToLower();

        if (confirmation != "yes")
        {
            Console.WriteLine("Restarting signup process...\n");
            Signup();
            SignupConfirmation();
        }
        else
        {
            Console.WriteLine("Signup successful!");
            MainMenu2();
        }
    }
    }

class Login {
    // Create a class to add a new user into the bank application:
   public string Login(string username, string password) {


      public string user.inputu
      public string user.inputp
       
    
        public string user(username, password){
        
        //Verification Details:
        Console.WriteLine("Welcome to the Bank of NSW! Enter a new username:")
        user.username = Console.ReadLine();
        Console.WriteLine("Enter a new password:")
        user.password = Console.ReadLine();
        

        // User's login, checked against their details
        Console.WriteLine("Username:");
        user.inputu = Console.ReadLine();

        Console.WriteLine("Password:");
        user.inputp = Console.ReadLine();
        
       //Links to verification system:
       if (user.inputu == user.username && user.inputp == user.password)
        {
           Console.WriteLine("Login verified, Welcome."); // Response for correct Login
        }
       else
       {
        Console.WriteLine("Password or username is incorrect."); // Response for incorrect password or username
       }
    }
   }

    
}



public static void MainMenu2() {

            while (true)
            {
                Console.WriteLine("Select 1-3: "); // Creating menu
                Console.WriteLine("1 View Account Balance");
                Console.WriteLine("2 Deposit");
                Console.WriteLine("3 Withdrawal");
                Console.WriteLine("4 Exit");

                string choice = Console.ReadLine();
                // Creating cases for Login and signup menu
                switch (choice)
                {
                    case "1":
                        ViewBalance();
                        break;
                    case "2":
                        Deposit();
                        break;
                    case "3":
                        Withdrawal();
                        break;
                    case "4":
                        Console.WriteLine("Shutting down");
                        return;
                    default:
                        Console.WriteLine("Choose a option on the menu between 1 to 3.");
                        break;
                }
        }
    }
 
 //View Balance Method:
 private double ViewBalance() {
    Console.WriteLine("Your current account balance is $" + accountBalance)
 }

//Deposit Method:
private double Deposit() {
    private double accountBalance = 0;

    Console.WriteLine("Current Balance: " + accountBalance + ". How much would you like to deposit?:");
    depositValue = Console.ReadLine();
    
    Console.WriteLine("Deposit value = $" + depositValue + ". Is this correct? (y/n)");
    depositConfirmation = Console.ReadLine()
    

if(depositConfirmation == y) {
    Console.WriteLine("Your new balance is " (accountBalance + depositValue) + ". Thank you.")
    break;
}


}



// Withdrawal Module (Victoria)

private double Withdrawal() {

}




//Calling the Main Menu method to start the program:
    public static void Main(string[] args)
    {   
        Console.WriteLine("Welcome, " + user.username "! Please choose from the following options:"\n)
        MainMenu();


    }
}


